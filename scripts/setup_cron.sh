#!/bin/bash
# Setup cron jobs for scheduled maintenance and monitoring
# This script sets up automated maintenance tasks for the Binance trading bot

echo "==== Setting up scheduled maintenance ===="

# Get the current directory path
cd "$(dirname "$(dirname "$0")")"
BOTDIR="$(pwd)"
SCRIPTS_DIR="$BOTDIR/scripts"

# Make all script files executable
chmod +x $SCRIPTS_DIR/*.sh

# Create a temporary crontab file
TEMP_CRONTAB="/tmp/binancebot_crontab"

# Add a header to the crontab file
cat > $TEMP_CRONTAB << EOF
# Binance Trading Bot scheduled tasks
# Auto-generated by setup_cron.sh on $(date)

# Daily maintenance at 3:00 AM
0 3 * * * $SCRIPTS_DIR/maintenance.sh > $BOTDIR/logs/maintenance_$(date +\%Y\%m\%d).log 2>&1

# Daily performance report at 00:05 AM
5 0 * * * $SCRIPTS_DIR/monitor.sh > $BOTDIR/logs/monitor_report_$(date +\%Y\%m\%d).log 2>&1

# Check bot status every 4 hours
0 */4 * * * systemctl is-active --quiet binancebot || systemctl restart binancebot

# Weekly system update check (Sunday at 4:00 AM)
0 4 * * 0 sudo apt-get update && sudo apt-get -s upgrade | grep -P '^\d+ upgraded' > $BOTDIR/logs/updates_available.log 2>&1

EOF

# Set up the crontab for the current user
echo "Adding scheduled tasks to crontab..."
crontab $TEMP_CRONTAB

# Remove temporary file
rm $TEMP_CRONTAB

echo ""
echo "Cron jobs set up successfully!"
echo "The following tasks have been scheduled:"
echo "- Daily system maintenance at 3:00 AM"
echo "- Daily performance report at 12:05 AM"
echo "- Bot status check every 4 hours with auto-restart if needed"
echo "- Weekly system update check on Sundays at 4:00 AM"
echo ""
echo "You can edit these schedules by running: crontab -e"
echo ""